<project name="pipes" default="war">
	<property name="ivy.install.version" value="2.0.0-beta1" />
	    <condition property="ivy.home" value="${env.IVY_HOME}">
	      <isset property="env.IVY_HOME" />
	    </condition>
	    <property name="ivy.home" value="${user.home}/.ant" />
	    <property name="ivy.jar.dir" value="${ivy.home}/lib" />
	    <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />
	
    <!-- project-specific variables -->
	<property name="version" value="0.7.1" />
    <property name="dest.dir" value="target" />
    <property name="jsp.dir.name" value="pipes" />
	<property name="jar.name" value="${jsp.dir.name}-${version}.jar" />
	<property name="jar.file" value="${dest.dir}/${jar.name}" />
    <property name="package.name" value="${jsp.dir.name}-${version}.war" />
    <property name="engine.name" value="${jsp.dir.name}-engine-${version}" />

    <property environment="env" />
    <property name="build.dir" value="build" />

    <property name="lib.dir" value="lib" />
    <property name="pages.dir" value="pages" />
    <property name="src.dir" value="src" />
    <property name="src.tests.dir" value="test/src" />
    <property name="webcontent.dir" value="WebContent" />
    <property name="weblib.dir" value="WebContent/WEB-INF/lib" />

    <!-- put everything in a temp folder with the right structure during the build -->
    <property name="temp.dir" value="temp" />
    <property name="temp.dir.classes" value="${temp.dir}/classes" />
	
    <property name="package.file" value="${dest.dir}/${package.name}" />

    <path id="build.class.path">
        <fileset dir="${weblib.dir}">
            <include name="*.jar" />
        </fileset>
        <fileset dir="${lib.dir}">
            <include name="*.jar" />
        </fileset>
    </path>

    <target name="clean">
        <mkdir dir="${dest.dir}" />
        <delete>
            <fileset dir="${dest.dir}" includes="**/*"/>
        </delete>
        <delete dir="${temp.dir}" />
    </target>

    <target name="prepare" depends="clean">
        <mkdir dir="${dest.dir}" />
        <mkdir dir="${temp.dir}" />
        <mkdir dir="${temp.dir.classes}" />
    </target>

    <!-- COMPILE -->
    <target name="compile" depends="prepare,init-ivy">
        <echo>=== COMPILE ===</echo>
        <echo>Compiling ${src.dir} files ...</echo>
        <javac debug="on" srcdir="${src.dir}" destdir="${temp.dir.classes}" includes="**/*">
            <classpath refid="build.class.path" />
        </javac>
    </target>
	
	<target name="jar" depends="compile">
		<jar destfile="${jar.file}">
			<fileset dir="${temp.dir.classes}" />
			<!--
			<fileset dir="${src.dir}" includes="*.pipe,*.xml,*.properties,*.list,*.groovy" />
			-->
		</jar>
    </target>

    <target name="war" depends="jar">
      <war destfile="${package.file}" webxml="${webcontent.dir}/WEB-INF/web.xml" basedir="${temp.dir}">
        <fileset dir="${webcontent.dir}"/>
        <lib dir="${lib.dir}" />
      	<lib file="${jar.file}" />
		<classes dir="${src.dir}" includes="**/*.pipe,*.xml,*.properties,*.list,*.groovy,cache.ccf" />
      </war>
    </target>
	<target name="engine" depends="jar">
		<copy file="${jar.file}" tofile="${temp.dir}/pipes.jar"/>
		<zip destfile="${dest.dir}/${engine.name}.zip">
			<zipfileset dir="${weblib.dir}" prefix="pipes-engine/lib">
				<include name="bsf.jar"/>
				<include name="cglib-nodep-2.2.jar"/>
				<include name="commons-httpclient-3.1.jar"/>
				<include name="commons-logging-1.1.jar"/>
				<include name="groovy.jar"/>
				<include name="icu4j_3_4.jar"/>
				<include name="iri.jar"/>
				<include name="jena.jar"/>
				<include name="mysql-connector-java-5.1.5-bin.jar"/>
				<include name="openrdf-sesame-2.1.2-onejar.jar"/>
				<include name="openrdf-xpath-functions-1.0-SNAPSHOT.jar"/>
				<include name="RDFContextTools2.0.jar"/>
				<include name="slf4j-api-1.3.0.jar"/>
				<include name="log4j-1.2.14.jar"/>
				<include name="slf4j-log4j12-1.3.0.jar"/>
				<include name="xercesImpl.jar"/>
				<include name="xpp3-1.1.4c.jar"/>
				<include name="commons-cli-1.1.jar"/>
				<include name="xstream-1.3.1.jar"/>
				<include name="saxon9.jar"/>
				<include name="saxon9-dom.jar"/>
				<include name="jcs-1.3.jar"/>
				<include name="nekohtml.jar"/>
				<include name="jericho-html-2.6.jar"/>
			</zipfileset>
			<zipfileset dir="${temp.dir}" includes="pipes.jar" prefix="pipes-engine/lib"/>
			<zipfileset dir="bin" includes="*" prefix="pipes-engine/bin"/>
			<zipfileset dir="src" includes="db.properties,*.xml,*.groovy,cache.ccf" prefix="pipes-engine/resources"/>
			<zipfileset file="src/log4j-engine.properties" fullpath="pipes-engine/resources/log4j.properties"/>
			<zipfileset file="doc/pipe-engine-readme.txt" fullpath="pipes-engine/readme.txt"/>
		</zip>
		<tar destfile="${dest.dir}/${engine.name}.tar.gz" compression="gzip">
		  <zipfileset src="${dest.dir}/${engine.name}.zip"/>
		</tar>
	</target>

    <target name="download-ivy" unless="offline">

        <mkdir dir="${ivy.jar.dir}"/>
        <!-- download Ivy from web site so that it can be used even without any special installation -->
        <get src="http://www.apache.org/dist/ant/ivy/${ivy.install.version}/ivy.jar"
            dest="${ivy.jar.file}" usetimestamp="true"/>
    </target>

    <target name="init-ivy" depends="download-ivy">
      <!-- try to load ivy here from ivy home, in case the user has not already dropped
              it into ant's lib dir (note that the latter copy will always take precedence).
              We will not fail as long as local lib dir exists (it may be empty) and
              ivy is in at least one of ant's lib dir or the local lib dir. -->
        <path id="ivy.lib.path">
            <fileset dir="${ivy.jar.dir}" includes="*.jar"/>

        </path>
        <taskdef resource="org/apache/ivy/ant/antlib.xml"
                 uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
    </target>

</project>
